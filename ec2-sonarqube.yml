#Ec2 instance launch and install sonarqube.
#install prerequisites pip, ansible, boto3, botocore for launching  aws resources
#configure AWS Credentials using export 
#using add_host module we dynamically call created new instance and executes tasks


---

  - name: Launch EC2 Instance in Custom VPC
    hosts: localhost
    gather_facts: no
    tasks:
      - name: Launch an EC2 instance
        amazon.aws.ec2_instance:
          name: "Sonarqube-server"
          key_name: Personal-laptop-keypair
          instance_type: t2.medium
          security_group: sg-0dab50029ff3f2b5b
          image_id: ami-0402e56c0a7afb78f
          region: ap-south-1
          vpc_subnet_id: subnet-03114d440064237d2
          network:
            assign_public_ip: yes
          tags:
            Environment: Dev
            Owner: ansible
        register: ec2
  
      - name: Show Instance Details
        debug:
          var: ec2.instances
  
      - name: Wait for SSH to be ready
        wait_for:
          host: "{{ ec2.instances[0].public_ip_address }}"
          port: 22
          delay: 30
          timeout: 300
          state: started
  
      - name: Add instance to in-memory inventory
        add_host:
          name: "{{ ec2.instances[0].public_ip_address }}"
          groups: launched_ec2
          ansible_user: ec2-user
          ansible_ssh_private_key_file: /home/ec2-user/Personal-laptop-keypair.pem
  
  # ðŸš€ Install Sonarqube and Create systemd Service
  - name: Install Sonarqube and run as a systemd service
    hosts: launched_ec2
    become: yes
    tasks:
      - name: Install dependencies
        yum:
          name:
            - wget
            - unzip
            - java-17-openjdk
          state: present
  
      - name: Create directory for Sonarqube
        file:
          path: /opt/sonarqube
          state: directory
          mode: '0755'
  
      - name: Download Sonarqube binary zip
        get_url:
          url: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.7.96285.zip
          dest: /opt/sonarqube/sonarqube-9.9.7.96285.zip
  
      - name: Unzip Sonarqube
        unarchive:
          src: /opt/sonarqube/sonarqube-9.9.7.96285.zip
          dest: /opt/sonarqube/
          remote_src: yes
  
      - name: Ensure sonar.sh is executable
        file:
          path: /opt/sonarqube/sonarqube-9.9.7.96285/bin/linux-x86-64/sonar.sh
          mode: '0755'
          state: file
  
      - name: Create sonarqube systemd service
        copy:
          dest: /etc/systemd/system/sonarqube.service
          content: |
            [Unit]
            Description=SonarQube service
            After=syslog.target network.target
  
            [Service]
            Type=forking
            ExecStart=/opt/sonarqube/sonarqube-9.9.7.96285/bin/linux-x86-64/sonar.sh start
            ExecStop=/opt/sonarqube/sonarqube-9.9.7.96285/bin/linux-x86-64/sonar.sh stop
            User=ec2-user
            Restart=always
            LimitNOFILE=65536
            LimitNPROC=4096
            
            [Install]
            WantedBy=multi-user.target
  
      - name: Reload systemd daemon
        systemd:
          daemon_reload: yes
  
      - name: Enable and start Sonarqube service
        systemd:
          name: sonarqube
          enabled: yes
          state: started
 

...


